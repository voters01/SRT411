library("swirl")
swirl()
1
swirl()
swirl()
swirl()
swirl()
swirl()
library('swirl')
swirl()
swirl
swirl()
library('swirl')
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 +1000
my_div
q()
q()
library("swirl")
swirl()
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical()
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
library("swirl")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
6 <=7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | C(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
innts > 5
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
?head
head(flags
head(flags)
head(flags)
dim(flags)
?class
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect sapply(flags, class)
cls_vect  <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flags_Colors, sum)
sapply(flags_colors, sum)
sapply(flag_colors, sum)
sapply(flag_color, mean)
sapply(flags_color, mean)
sapply(flags_colors, mean)
sapply(flag_colors, mean)
flags_shapes <- flags[, 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mate <- sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,6,7,6,6,6,5,))
unique(c(3,4,5,6,7,6,6,6,5,5))
unique(c(3,4,5,5,5,6,6))
lappy(flags, unique)
lapply(flags, unique)
uniqe_vals <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_val, length)
sapply(unique_val, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2]
)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
?$
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$landmasses, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plant)
head(plants)
head(plants, 10)
tail(plants)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4)
sample(1:20, 10)
letters()
LETTERS()
LETTERS
letters
sample(LETTERS)
flips <- sample(c(0,1), replacement = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, mean = 10)
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2
)
t2
unclass(t2)
str(unclass(t2))
t2$min
weeksdays(t1)
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
t1 < Sys.time()
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
polt()
polt(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(y = cars$speed name = speed, x = cars$dist)
plot(y = cars$speed, name = speed, x = cars$dist)
plot(y = cars$speed,  x = cars$dist, label = Speed)
plot(y = cars$speed,  x = cars$dist,)
plot(y = cars$speed,  x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, lab = "Speed", "Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
>plot
?plot
"My Plot"(plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance"))
My Plot(plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance"))
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance") title(main = "My Plot")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance") title(main = "My Plot")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, x = c(10,15)
)
plot(cars, xlim = c(10,15)
)
?points
points(cars, pch = 2)
plor(cars, pch = 2)
plot(cars, pch = 2)
load(mtcars)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
savehistory("~/SRT411/tut(completed).Rhistory")
